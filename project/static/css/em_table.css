body{
    position: relative;
    margin: 0;
    padding: 0;
    background-color: #ECECEC;
    overflow-x: hidden;
    height: fit-content;
    font-family: kanit;

}
.content_container{
  margin-top: 10px;
  text-align: center;
}

.table
{
  scale: 0.8;
  margin-top: 0;
  margin: auto;
  border-collapse: separate;
  border: 1px solid rgba(0, 0, 0, 0.25);
  border-radius: 25px;
  border-spacing: 0;
  background: rgba(255,255,255,0.5);
  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;

  /* font */
  color: #000;
  font-size: 25px;
  font-style: normal;
  font-weight: 400;
  line-height: normal;
}

.table th,td
{
  text-align: center;
  padding: 16px 24px;
}
.table td{
  border-top: 1px solid rgba(0, 0, 0, 0.25);
}
.table th,td{
  border-right: 1px solid rgba(0, 0, 0, 0.25);
}
th:last-child,td:last-child {
  padding:16px 48px;
  border-right: 0px;
}
th:nth-child(2),td:nth-child(2) {
  padding:16px 72px;
}

td{
  &.waiting{
    color: #FF1A1A; 
  
  }
  &.complete{
    color: #91e597;

  }
}


@keyframes waviy {
  0%,40%,100% {
    transform: translateY(0)
  }
  20% {
    transform: translateY(-20px)
  }
}




/* background */

@keyframes rotate {
  0% {
      transform: translateX(0) rotate(0deg);
      /* transform: rotate(0deg) translateX(0vw); */
  }
  100% {
      transform: translateX(80vw) rotate(20deg);
      /* transform: rotate(20deg) translateX(80vw); */
  }
}
@keyframes rotate2 {
  0% {
      transform: translateX(80vw) rotate(20deg);
      /* transform: rotate(20deg) translateX(80vw); */
  }
  100% {
      transform: translateX(0) rotate(0deg);
      /* transform: rotate(0deg) translateX(0vw); */
  }
}
.BG{
  top: 0;
  display: block;
  position: absolute;
  height: 100%;
  width: 100%;
  z-index: -1;
  overflow: hidden;
}
.gradient_bg {
  --size: 500px;
  --speed: 10s;
  --easing: cubic-bezier(0.5, 0.2, 0.2, 0.5);
  text-align: center;
  width: var(--size);
  height: var(--size);
  filter: blur(50px);
  -webkit-filter: blur(50px);
  background: linear-gradient(#e66465, #9198e5);
 /*  background: linear-gradient(hsl(158, 82, 57, 85%), hsl(252, 82, 57)); */
  animation: rotate var(--speed) var(--easing) alternate infinite;
  border-radius: 50% ;
  opacity: 50%;
}
.item2{
  background: linear-gradient(#46f6ff, #91e597);
  animation: rotate2 var(--speed) var(--easing) alternate infinite;
}

@media (min-width: 720px) {
  .gradient_bg {
    --size: 500px;
  }
}

/* This is just to transition when you change the viewport size. */
* {
  transition: all 0.25s ease-in-out;
}